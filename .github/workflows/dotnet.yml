name: .NET

on: [push, pull_request]

env:
  EXCLUDE_RUN_ID_FROM_PACKAGE: false
  EXCLUDE_SUFFIX_FROM_VERSION: false

jobs:

  # Build the whole PolySharp solution, in Debug
  build-solution-debug:
    runs-on: windows-2022
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
    - name: Build
      run: dotnet build -c Debug /bl
      shell: cmd
    - name: Upload MSBuild binary log
      uses: actions/upload-artifact@v3
      with:
        name: msbuild_log
        path: msbuild.binlog
        if-no-files-found: error

  # Build the whole PolySharp solution, in Release
  build-solution-release:
    runs-on: windows-2022
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
    - name: Build
      run: dotnet build -c Release /p:Configuration=Release
      shell: cmd

  # Build the .msbuildproj projects to generate all the NuGet packages
  build-packages:
    if: success()
    needs: [build-solution-debug, build-solution-release]
    runs-on: windows-2022
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
    - name: Build PolySharp package
      run: dotnet build src\PolySharp.Package\PolySharp.Package.msbuildproj -c Release
      shell: cmd
    - name: Upload package artifacts
      uses: actions/upload-artifact@v3
      with:
        name: nuget_preview
        path: artifacts\*.nupkg
        if-no-files-found: error

  # Download the NuGet packages generated in the previous job and use them
  # to build and run the sample project referencing them. This is used as
  # a test to ensure the NuGet packages work in a consuming project.
  verify-packages:
    if: success()
    needs: [build-packages]
    runs-on: windows-2022
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
    - name: Create local NuGet feed
      run: mkdir artifacts
      shell: cmd
    - name: Download package artifacts
      uses: actions/download-artifact@v3
      with:
        name: nuget_preview
        path: artifacts
    - name: Build PolySharp.NuGet
      run: dotnet build tests\PolySharp.NuGet\PolySharp.NuGet.csproj -c Release
      shell: cmd
